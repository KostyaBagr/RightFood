"""updated fk to lunch, dinner

Revision ID: 190b1f59ca59
Revises: 
Create Date: 2024-01-02 20:33:01.602119

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '190b1f59ca59'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('age', sa.String(), nullable=False),
    sa.Column('weight', sa.String(), nullable=False),
    sa.Column('height', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('dishes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('brand', sa.String(length=100), nullable=False),
    sa.Column('calories', sa.String(length=5), nullable=False),
    sa.Column('fats', sa.String(length=5), nullable=False),
    sa.Column('proteins', sa.String(length=5), nullable=False),
    sa.Column('carbohydrates', sa.String(length=5), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dishes_id'), 'dishes', ['id'], unique=False)
    op.create_table('food_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('valid_to', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_food_lists_id'), 'food_lists', ['id'], unique=False)
    op.create_table('breakfast_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('food_list_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['food_list_id'], ['food_lists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_breakfast_lists_id'), 'breakfast_lists', ['id'], unique=False)
    op.create_table('dinner_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('food_list_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['food_list_id'], ['food_lists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dinner_lists_id'), 'dinner_lists', ['id'], unique=False)
    op.create_table('lunch_lists',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('food_list_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['food_list_id'], ['food_lists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lunch_lists_id'), 'lunch_lists', ['id'], unique=False)
    op.create_table('breakfast_dish_association',
    sa.Column('breakfast_id', sa.Integer(), nullable=True),
    sa.Column('dish_id', sa.Integer(), nullable=True),
    sa.Column('weight', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['breakfast_id'], ['breakfast_lists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ondelete='CASCADE')
    )
    op.create_table('dinner_dish_association',
    sa.Column('dinner_id', sa.Integer(), nullable=True),
    sa.Column('dish_id', sa.Integer(), nullable=True),
    sa.Column('weight', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['dinner_id'], ['dinner_lists.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ondelete='CASCADE')
    )
    op.create_table('lunch_dish_association',
    sa.Column('lunch_id', sa.Integer(), nullable=True),
    sa.Column('dish_id', sa.Integer(), nullable=True),
    sa.Column('weight', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['lunch_id'], ['lunch_lists.id'], ondelete='CASCADE')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('lunch_dish_association')
    op.drop_table('dinner_dish_association')
    op.drop_table('breakfast_dish_association')
    op.drop_index(op.f('ix_lunch_lists_id'), table_name='lunch_lists')
    op.drop_table('lunch_lists')
    op.drop_index(op.f('ix_dinner_lists_id'), table_name='dinner_lists')
    op.drop_table('dinner_lists')
    op.drop_index(op.f('ix_breakfast_lists_id'), table_name='breakfast_lists')
    op.drop_table('breakfast_lists')
    op.drop_index(op.f('ix_food_lists_id'), table_name='food_lists')
    op.drop_table('food_lists')
    op.drop_index(op.f('ix_dishes_id'), table_name='dishes')
    op.drop_table('dishes')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
